cmake_minimum_required(VERSION 3.24)
project(rhs_hal C)
set(CMAKE_C_STANDARD 11)

add_library(${PROJECT_NAME} STATIC
        rhs_hal.c
)

target_include_directories(
        ${PROJECT_NAME} PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)

function(add_submodule_and_link_library submodule)
        add_subdirectory(${submodule})
        target_link_libraries(${PROJECT_NAME} PUBLIC ${submodule})
endfunction()

add_submodule_and_link_library(rhs_hal_interrupt)
add_submodule_and_link_library(rhs_hal_cortex)
add_submodule_and_link_library(rhs_hal_power)
add_submodule_and_link_library(rhs_hal_version)

if(RPLC_XL)
        target_compile_definitions(${PROJECT_NAME} PUBLIC -DRPLC_XL)
        add_submodule_and_link_library(rhs_hal_flash_ex)
        add_submodule_and_link_library(rhs_hal_io)
        add_submodule_and_link_library(rhs_hal_rtc)
        add_submodule_and_link_library(rhs_hal_serial)
        add_submodule_and_link_library(rhs_hal_speaker)
        add_submodule_and_link_library(rhs_hal_can)
        add_submodule_and_link_library(rhs_hal_random)
        # add_submodule_and_link_library(rhs_hal_network)
elseif(RPLC_L)
        target_compile_definitions(${PROJECT_NAME} PUBLIC -DRPLC_L)
        add_submodule_and_link_library(rhs_hal_flash_ex)
        add_submodule_and_link_library(rhs_hal_io)
        add_submodule_and_link_library(rhs_hal_rtc)
        add_submodule_and_link_library(rhs_hal_serial)
        add_submodule_and_link_library(rhs_hal_speaker)
        add_submodule_and_link_library(rhs_hal_can)
        add_submodule_and_link_library(rhs_hal_random)
elseif(RPLC_M)
        target_compile_definitions(${PROJECT_NAME} PUBLIC -DRPLC_M)
        add_submodule_and_link_library(rhs_hal_speaker)
        add_submodule_and_link_library(rhs_hal_serial)
        add_submodule_and_link_library(rhs_hal_can)
        add_submodule_and_link_library(rhs_hal_usb)
else()
        if(RHS_HAL_SPEAKER)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_SPEAKER)
                add_compile_definitions(-DRHS_HAL_SPEAKER)
                add_submodule_and_link_library(rhs_hal_speaker)
        endif()
        if(RHS_HAL_FLASH_EX)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_FLASH_EX)
                add_compile_definitions(-DRHS_HAL_FLASH_EX)
                add_submodule_and_link_library(rhs_hal_flash_ex)
        endif()
        if(RHS_HAL_RTC)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_RTC)
                add_compile_definitions(-DRHS_HAL_RCT)
                add_submodule_and_link_library(rhs_hal_rtc)
        endif()
        if(RHS_HAL_IO)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_IO)
                add_compile_definitions(-DRHS_HAL_IO)
                add_submodule_and_link_library(rhs_hal_io)
        endif()
        if(RHS_HAL_SERIAL)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_SERIAL)
                add_compile_definitions(-DRHS_HAL_SERIAL)
                add_submodule_and_link_library(rhs_hal_serial)
        endif()
        if(RHS_HAL_CAN)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_CAN)
                add_compile_definitions(-DRHS_HAL_CAN)
                add_submodule_and_link_library(rhs_hal_can)
        endif()
        if(RHS_HAL_NETWORK)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_NETWORK)
                add_compile_definitions(-DRHS_HAL_NETWORK)
                add_submodule_and_link_library(rhs_hal_network)
        endif()
        if(RHS_HAL_RANDOM)
                target_compile_definitions(${PROJECT_NAME} PUBLIC -DRHS_HAL_RANDOM)
                add_compile_definitions(-DRHS_HAL_RANDOM)
                add_submodule_and_link_library(rhs_hal_random)
        endif()
endif()
